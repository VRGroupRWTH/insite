# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from access_node.models.base_model_ import Model
from access_node import util


class SpikedetectorInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, spikedetector_id=None, node_ids=None):  # noqa: E501
        """SpikedetectorInfo - a model defined in OpenAPI

        :param spikedetector_id: The spikedetector_id of this SpikedetectorInfo.  # noqa: E501
        :type spikedetector_id: int
        :param node_ids: The node_ids of this SpikedetectorInfo.  # noqa: E501
        :type node_ids: List[int]
        """
        self.openapi_types = {
            'spikedetector_id': int,
            'node_ids': List[int]
        }

        self.attribute_map = {
            'spikedetector_id': 'spikedetectorId',
            'node_ids': 'nodeIds'
        }

        self._spikedetector_id = spikedetector_id
        self._node_ids = node_ids

    @classmethod
    def from_dict(cls, dikt) -> 'SpikedetectorInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SpikedetectorInfo of this SpikedetectorInfo.  # noqa: E501
        :rtype: SpikedetectorInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def spikedetector_id(self):
        """Gets the spikedetector_id of this SpikedetectorInfo.


        :return: The spikedetector_id of this SpikedetectorInfo.
        :rtype: int
        """
        return self._spikedetector_id

    @spikedetector_id.setter
    def spikedetector_id(self, spikedetector_id):
        """Sets the spikedetector_id of this SpikedetectorInfo.


        :param spikedetector_id: The spikedetector_id of this SpikedetectorInfo.
        :type spikedetector_id: int
        """

        self._spikedetector_id = spikedetector_id

    @property
    def node_ids(self):
        """Gets the node_ids of this SpikedetectorInfo.

        These are the nodes connected to the spike detector.  # noqa: E501

        :return: The node_ids of this SpikedetectorInfo.
        :rtype: List[int]
        """
        return self._node_ids

    @node_ids.setter
    def node_ids(self, node_ids):
        """Sets the node_ids of this SpikedetectorInfo.

        These are the nodes connected to the spike detector.  # noqa: E501

        :param node_ids: The node_ids of this SpikedetectorInfo.
        :type node_ids: List[int]
        """

        self._node_ids = node_ids
