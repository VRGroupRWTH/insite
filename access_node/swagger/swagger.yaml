---
swagger: "2.0"
info:
  description: "This is the REST API for the in-situ pipeline."
  version: "1.0.0"
  title: "In-Situ Pipeline REST API"
host: "localhost"
basePath: "/"
schemes:
- "https"
- "http"
paths:
  /simulation_time_info:
    get:
      tags:
      - "nest"
      summary: "Retrieves simulation time information."
      operationId: "get_simulation_time_info"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Operation successful."
          schema:
            $ref: "#/definitions/SimulationTimeInfo"
        400:
          description: "Operation failed."
          schema:
            type: "string"
            example: "Error message"
      x-swagger-router-controller: "access_node.controllers.nest_controller"
  /gids:
    get:
      tags:
      - "nest"
      summary: "Retrieves the list of all GID."
      operationId: "get_gids"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Operation successful."
          schema:
            type: "array"
            items:
              type: "integer"
              format: "uint64"
        400:
          description: "Operation failed."
          schema:
            type: "string"
            example: "Error message"
      x-swagger-router-controller: "access_node.controllers.nest_controller"
  /neuron_properties:
    get:
      tags:
      - "nest"
      summary: "Retrieves the properties of the specified neurons."
      operationId: "get_neuron_properties"
      produces:
      - "application/json"
      parameters:
      - name: "gids"
        in: "query"
        description: "A list of GIDs queried for properties."
        required: false
        type: "array"
        items:
          type: "integer"
          format: "uint64"
      responses:
        200:
          description: "Operation successful."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NeuronProperties"
        400:
          description: "Operation failed."
          schema:
            type: "string"
            example: "Error message"
      x-swagger-router-controller: "access_node.controllers.nest_controller"
  /populations:
    get:
      tags:
      - "nest"
      summary: "Retrieves the list of all population IDs."
      operationId: "get_populations"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Operation successful."
          schema:
            type: "array"
            items:
              type: "integer"
              format: "uint64"
        400:
          description: "Operation failed."
          schema:
            type: "string"
            example: "Error message"
      x-swagger-router-controller: "access_node.controllers.nest_controller"
  /spikes:
    get:
      tags:
      - "nest"
      summary: "Retrieves the spikes for the given simulation steps (optional) and\
        \ GIDS (optional)."
      operationId: "get_spikes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "from"
        in: "query"
        description: "The start time (including) to be queried."
        required: false
        type: "number"
        format: "double"
      - name: "to"
        in: "query"
        description: "The end time (excluding) to be queried."
        required: false
        type: "number"
        format: "double"
      - name: "gids"
        in: "query"
        description: "A list of GIDs queried for spike data."
        required: false
        type: "array"
        items:
          type: "integer"
          format: "uint64"
      - name: "offset"
        in: "query"
        description: "The offset into the result."
        required: false
        type: "integer"
        format: "uint64"
      - name: "limit"
        in: "query"
        description: "The maximum of entries to be result."
        required: false
        type: "integer"
        format: "uint64"
      responses:
        200:
          description: "Operation successful."
          schema:
            $ref: "#/definitions/Spikes"
        400:
          description: "Operation failed."
          schema:
            type: "string"
            example: "Error message"
      x-swagger-router-controller: "access_node.controllers.nest_controller"
  /population/${population_id}/spikes:
    get:
      tags:
      - "nest"
      summary: "Retrieves the spikes for the given simulation steps (optional) and\
        \ population."
      operationId: "get_spikes_by_population"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "population_id"
        in: "path"
        description: "The identifier of the population."
        required: true
        type: "integer"
        format: "uint64"
      - name: "from"
        in: "query"
        description: "The start time (including) to be queried."
        required: false
        type: "number"
        format: "double"
      - name: "to"
        in: "query"
        description: "The end time (excluding) to be queried."
        required: false
        type: "number"
        format: "double"
      - name: "offset"
        in: "query"
        description: "The offset into the result."
        required: false
        type: "integer"
        format: "uint64"
      - name: "limit"
        in: "query"
        description: "The maximum of entries to be result."
        required: false
        type: "integer"
        format: "uint64"
      responses:
        200:
          description: "Operation successful."
          schema:
            $ref: "#/definitions/Spikes"
        400:
          description: "Operation failed."
          schema:
            type: "string"
            example: "Error message"
      x-swagger-router-controller: "access_node.controllers.nest_controller"
  /multimeter_info:
    get:
      tags:
      - "nest"
      summary: "Retrieves the measurements for a multimeter (optional) and GIDS (optional)."
      operationId: "get_multimeter_info"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Operation successful."
          schema:
            $ref: "#/definitions/MultimeterInfo"
        400:
          description: "Operation failed."
          schema:
            type: "string"
            example: "Error message"
      x-swagger-router-controller: "access_node.controllers.nest_controller"
  /multimeter_measurement:
    get:
      tags:
      - "nest"
      summary: "Retrieves the measurements for a multimeter (optional) and GIDS (optional)."
      operationId: "get_multimeter_measurements"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "multimeter_id"
        in: "query"
        description: "The multimeter to query"
        required: true
        type: "number"
        format: "integer"
      - name: "attribute"
        in: "query"
        description: "The attribute to query (e.g., 'V_m' for the membrane potential)"
        required: true
        type: "string"
      - name: "from"
        in: "query"
        description: "The start time (including) to be queried."
        required: false
        type: "number"
        format: "double"
      - name: "to"
        in: "query"
        description: "The end time (excluding) to be queried."
        required: false
        type: "number"
        format: "double"
      - name: "gids"
        in: "query"
        description: "A list of GIDs queried for spike data."
        required: false
        type: "array"
        items:
          type: "integer"
          format: "uint64"
      - name: "offset"
        in: "query"
        description: "The offset into the result."
        required: false
        type: "integer"
        format: "uint64"
      - name: "limit"
        in: "query"
        description: "The maximum of entries to be result."
        required: false
        type: "integer"
        format: "uint64"
      responses:
        200:
          description: "Operation successful."
          schema:
            $ref: "#/definitions/MultimeterMeasurement"
        400:
          description: "Operation failed."
          schema:
            type: "string"
            example: "Error message"
      x-swagger-router-controller: "access_node.controllers.nest_controller"
  /population/${population_id}/gids:
    get:
      tags:
      - "nest"
      summary: "Retrieves the list of all neuron IDs."
      operationId: "get_gids_in_population"
      produces:
      - "application/json"
      parameters:
      - name: "population_id"
        in: "path"
        description: "The identifier of the population"
        required: true
        type: "integer"
        format: "uint64"
      responses:
        200:
          description: "Operation successful."
          schema:
            type: "array"
            items:
              type: "integer"
              format: "uint64"
        400:
          description: "Operation failed."
          schema:
            type: "string"
            example: "Error message"
      x-swagger-router-controller: "access_node.controllers.nest_controller"
definitions:
  Spikes:
    type: "object"
    properties:
      simulation_times:
        type: "array"
        description: "This array is always sorted."
        items:
          type: "number"
          format: "double"
      gids:
        type: "array"
        items:
          type: "integer"
          format: "uint64"
    example:
      simulation_times:
      - 0.8008281904610115
      - 0.8008281904610115
      gids:
      - 6.027456183070403
      - 6.027456183070403
  MultimeterInfo:
    type: "array"
    items:
      $ref: "#/definitions/MultimeterInfo_inner"
    example:
    - id: 0
      attributes:
      - "V_m"
  MultimeterMeasurement:
    type: "object"
    properties:
      simulation_times:
        type: "array"
        description: "This array is always sorted."
        items:
          type: "number"
          format: "double"
      gids:
        type: "array"
        items:
          type: "integer"
          format: "uint64"
      values:
        type: "array"
        description: "This array contains the measured values for each gid and time\
          \ to get the value for gid n at time t you have to use the index n * length(simulation_times)\
          \ + t"
        items:
          type: "number"
    example:
      simulation_times:
      - 0.1
      - 0.2
      gids:
      - 1
      - 2
      - 3
      values:
      - 0.123
      - 0.123
      - 0.123
      - 0.123
      - 0.123
      - 0.123
  NeuronProperties:
    type: "object"
    properties:
      gid:
        type: "integer"
        format: "uint64"
      properties:
        type: "object"
        properties: {}
    example:
      population: "pop1"
      position:
      - 0.1
      - 0.1
      - 0.1
  SimulationTimeInfo:
    type: "object"
    properties:
      start:
        type: "number"
        format: "double"
      end:
        type: "number"
        format: "double"
      current:
        type: "number"
        format: "double"
    example:
      current: 1.4658129805029452
      start: 0.8008281904610115
      end: 6.027456183070403
  MultimeterInfo_inner:
    properties:
      id:
        type: "integer"
        format: "uint64"
      attributes:
        type: "array"
        items:
          type: "string"
      gids:
        type: "array"
        items:
          type: "integer"
          format: "uint64"
