# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from access_node.models.base_model_ import Model
from access_node import util


class MultimeterInfoInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, attributes: List[str]=None, gids: List[int]=None):  # noqa: E501
        """MultimeterInfoInner - a model defined in Swagger

        :param id: The id of this MultimeterInfoInner.  # noqa: E501
        :type id: int
        :param attributes: The attributes of this MultimeterInfoInner.  # noqa: E501
        :type attributes: List[str]
        :param gids: The gids of this MultimeterInfoInner.  # noqa: E501
        :type gids: List[int]
        """
        self.swagger_types = {
            'id': int,
            'attributes': List[str],
            'gids': List[int]
        }

        self.attribute_map = {
            'id': 'id',
            'attributes': 'attributes',
            'gids': 'gids'
        }

        self._id = id
        self._attributes = attributes
        self._gids = gids

    @classmethod
    def from_dict(cls, dikt) -> 'MultimeterInfoInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MultimeterInfo_inner of this MultimeterInfoInner.  # noqa: E501
        :rtype: MultimeterInfoInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this MultimeterInfoInner.


        :return: The id of this MultimeterInfoInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this MultimeterInfoInner.


        :param id: The id of this MultimeterInfoInner.
        :type id: int
        """

        self._id = id

    @property
    def attributes(self) -> List[str]:
        """Gets the attributes of this MultimeterInfoInner.


        :return: The attributes of this MultimeterInfoInner.
        :rtype: List[str]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes: List[str]):
        """Sets the attributes of this MultimeterInfoInner.


        :param attributes: The attributes of this MultimeterInfoInner.
        :type attributes: List[str]
        """

        self._attributes = attributes

    @property
    def gids(self) -> List[int]:
        """Gets the gids of this MultimeterInfoInner.


        :return: The gids of this MultimeterInfoInner.
        :rtype: List[int]
        """
        return self._gids

    @gids.setter
    def gids(self, gids: List[int]):
        """Sets the gids of this MultimeterInfoInner.


        :param gids: The gids of this MultimeterInfoInner.
        :type gids: List[int]
        """

        self._gids = gids
