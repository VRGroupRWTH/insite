openapi: 3.0.1
info:
  description: This is the REST API for the NEST module of Insite.
  title: Insite NEST Module API
  version: 1.0.0
servers:
- url: http://localhost/
paths:
  # /version:
  #   get:
  #     operationId: get_version
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Version'
  #         description: Operation successful.
  #       "500":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ErrorResponse'
  #         description: Operation failed due to server error.
  #     summary: Returns the deployed insite version.
  #     tags:
  #       - NEST Module
  /nest/kernelStatus:
    get:
      operationId: nest_get_kernel_status
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NestKernelStatus'
                type: array
          description: Operation successful.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed due to server error.
      summary: Retreives the current status of the NEST kernel.
      tags:
        - NEST Module
  /nest/nodeCollections:
    get:
      operationId: nest_get_node_collections
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NestNodeCollectionProperties'
                type: array
          description: Operation successful.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed due to server error.
      summary: Retrieves a list of all node collection IDs.
      tags:
        - NEST Module
  /spikes:
    get:
      operationId: get_spikes
      parameters:
      - description: The ID of the spike detector to query.
        in: query
        name: spikedetectorId
        schema:
          format: uint64
          type: integer
      - description: The identifier of the population.
        in: query
        name: nodeCollectionId
        schema:
          format: uint64
          type: integer
        style: form
      - description: The start time (including) to be queried.
        in: query
        name: fromTime
        schema:
          format: double
          type: number
        style: form
      - description: The end time (excluding) to be queried.
        in: query
        name: toTime
        schema:
          format: double
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Operation successful.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed due to server error.
      summary: Returns the deployed insite version.
      tags:
        - NEST Module
components:
  schemas:
    Version:
      example:
        insite: "1.0"
      properties:
        insite:
          type: string
      required:
      - insite
      type: object
    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
      required:
      - error
      type: object
    Error:
      properties:
        code:
          description: 'One of the error codes defined here: [...]'
          type: string
        message:
          description: A human-readable representation of the error.
          type: string
        innererror:
          $ref: '#/components/schemas/InnerError'
      required:
      - code
      - message
      type: object
    InnerError:
      properties:
        code:
          description: 'One of the error codes defined here: [...]'
          type: string
        innererror:
          $ref: '#/components/schemas/InnerError'
      required:
      - code
      type: object
    Spikes:
      example:
        simulationTimes:
        - 0.8
        - 0.9
        neuronIds:
        - 1
        - 2
      properties:
        simulationTimes:
          description: This array is always sorted.
          items:
            format: double
            type: number
          type: array
        neuronIds:
          items:
            format: uint64
            type: integer
          type: array
      type: object
    NestKernelStatus:
      properties:
        resolution:
          description: The resolution of the simulation (in ms)
          type: number
        time:
          description: The current simulation time
          type: number
        to_do:
          description: The number of steps yet to be simulated (read only)
          type: integer
        max_delay:
          description: The maximum delay in the network
          type: number
        min_delay:
          description: The minimum delay in the network
          type: number
        ms_per_tic:
          description: The number of milliseconds per tic
          type: number
        tics_per_ms:
          description: The number of tics per millisecond
          type: number
        tics_per_step:
          description: The number of tics per simulation time step
          type: integer
        T_max:
          description: The largest representable time value (read only)
          type: number
        T_min:
          description: The smallest representable time value (read only)
          type: number
        total_num_virtual_procs:
          description: The total number of virtual processes
          type: integer
        local_num_threads:
          description: The local number of threads
          type: integer
        num_processes:
          description: The number of MPI processes (read only)
          type: integer
        off_grid_spiking:
          description: Whether to transmit precise spike times in MPI communication
            (read only)
          type: boolean
        initial_connector_capacity:
          description: When a connector is first created, it starts with this capacity
            (if >= connector_cutoff)
          type: integer
        large_connector_limit:
          description: Capacity doubling is used up to this limit
          type: integer
        large_connector_growth_factor:
          description: Capacity growth factor to use beyond the limit
          type: number
        grng_seed:
          description: Seed for global random number generator used synchronously
            by all virtual processes to create, e.g., fixed fan-out connections (write
            only).
          type: integer
        rng_seeds:
          description: Seeds for the per-virtual-process random number generators
            used for most purposes. Array with one integer per virtual process, all
            must be unique and differ from grng_seed (write only).
          items:
            type: integer
          type: array
        data_path:
          description: A path, where all data is written to (default is the current
            directory)
          type: string
        data_prefix:
          description: A common prefix for all data files
          type: string
        overwrite_files:
          description: Whether to overwrite existing data files
          type: boolean
        print_time:
          description: Whether to print progress information during the simulation
          type: boolean
        network_size:
          description: The number of nodes in the network (read only)
          type: integer
        num_connections:
          description: The number of connections in the network (read only, local
            only)
          type: integer
        use_wfr:
          description: Whether to use waveform relaxation method
          type: boolean
        wfr_comm_interval:
          description: Desired waveform relaxation communication interval
          type: number
        wfr_tol:
          description: Convergence tolerance of waveform relaxation method
          type: number
        wfr_max_iterations:
          description: Maximal number of iterations used for waveform relaxation
          type: integer
        wfr_interpolation_order:
          description: Interpolation order of polynomial used in wfr iterations
          type: integer
        dict_miss_is_error:
          description: Whether missed dictionary entries are treated as errors
          type: boolean
      type: object
